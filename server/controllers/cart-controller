const Cart = require("../models/Cart");
const Product = require("../models/Product");

module.exports = {
  async getCartItems(req, res) {
    const userId = req.params.id;
    try {
      let cart = await Cart.findOne({ userId });
      if (cart && cart.items.length > 0) {
        res.send(cart);
      } else {
        res.send("Cart is empty");
      }
    } catch (err) {
      console.logg(err);
      return res.status(400).json(err);
    }
  },

  async updateCart(req, res) {
    const userId = req.params.id;
    const { productId, quantity } = req.body;
    try {
      let cart = await Cart.findOne({ userId });
      let product = await Product.findOne({ _id: productId });
      if (!product) {
        res.status(404).send("Product not found!");
      }
      const price = product.price;
      const title = product.title;

      if (cart) {
        let productIndex = cart.items.findIndex(
          (item) => item.productId === productId
        );

        if (productIndex > -1) {
          let productItem = cart.items[productIndex];
          productItem.quantity += quantity;
          cart.items[productIndex] = productItem;
        } else {
          cart.items.push({ productId, title, quantity, price });
        }

        cart.total += quantity * price;
        return res.status(200).send(cart);
      } else {
        const newCart = await Cart.create({
          userId,
          items: [{ productId, title, quantity, price }],
          total: quantity * price,
        });
        return res.status(200).send(newCart);
      }
    } catch (err) {
      console.logg(err);
      return res.status(400).json(err);
    }
  },

  async deleteCart(req, res) {
    const userId = req.params.id;
    const productId = req.params.productId;
    try {
      let cart = await Cart.findOne({ userId });
      let productIndex = cart.items.findIndex(
        (item) => item.productId === productId
      );

      if (productIndex > -1) {
        let productItem = cart.items[productIndex];
        cart.total += productItem.quantity * productItem.price;
        cart.items.splice(productIndex, 1);
      }
      return res.status(200).send(cart);
    } catch (err) {
      console.logg(err);
      return res.status(400).json(err);
    }
  },
};
